// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id                Int               @id @default(autoincrement())
  name              String
  email             String            @unique
  password          String
  role              String?           @default("user") // You can customize roles as needed
  avatar            String?           @default("https://i0.wp.com/www.repol.copl.ulaval.ca/wp-content/uploads/2019/01/default-user-icon.jpg?ssl=1") // Store the avatar image URL
  // Add any other user-related fields as needed
  // orders            Order[]
  // reviews           Review[]
  // shoppingCarts     ShoppingCart[]
  wishlists         Wishlist[]
  // payments          Payment[]
  // shippingAddresses ShippingAddress[]
  // wishlists         Wishlist[]
  // Shipment          Shipment[]

}

// model Product {
//   id          Int     @id @default(autoincrement())
//   description String  @db.LongText
//   price       Float
//   sale        Float?
//   thumbnail   String? @db.LongText // Store the thumbnail image URL
//   images      String? @db.LongText // Store multiple image URLs as an array
//   // Add any other product-related fields as needed

//   // Define the relationships
//   categoryId Int?
//   typeId     Int?
//   genderId   Int?
//   name       String
//   category   Category?    @relation(fields: [categoryId], references: [id])
//   type       ProductType? @relation(fields: [typeId], references: [id])
//   gender     Gender?      @relation(fields: [genderId], references: [id])
//   // sizes      ProductSize[]
//   sizes      String       @db.LongText
//   reviews    Review[]
//   orderItems OrderItem[]
//   sales      Sale[]
//   wishlists  Wishlist[]
//   CartItem   CartItem[]

//   @@index([categoryId])
//   @@index([typeId])
//   @@index([genderId])
// }

// model Category {
//   id       Int       @id @default(autoincrement())
//   name     String // Example: "Basketball," "Football," "Running," "Gym"
//   products Product[]

// }

// model ProductType {
//   id          Int           @id @default(autoincrement())
//   name        String // Example: "Shoes," "Clothes," "Accessories"
//   products    Product[]
//   Subcategory Subcategory[]
// }

// model Subcategory { 
// //shoes: low, mid, high, sandals, slides
// //clothes: t-shirt, hoodie, sweatshirt, pants, shorts, jacket
// //accessories: socks, back-packs, hats, gloves, balls
//   id            Int         @id @default(autoincrement())
//   name          String // Example: "Low top," "High top," "T-shirt," etc.
//   productTypeId Int // Reference to the parent ProductType
//   productType   ProductType @relation(fields: [productTypeId], references: [id])

//   @@index([productTypeId])
// }

// model Gender {
//   id       Int       @id @default(autoincrement())
//   name     String // Example: "Men," "Women," "Kids"
//   products Product[]
// }

// model ProductSize {
//   id        Int    @id @default(autoincrement())
//   size      String // Example: "EU 35," "EU 40," "S," "2XL," etc.
//   remaining Int // Remaining quantity in the shop storage
//   // products  Product[]
// }

// model Review {
//   id        Int     @id @default(autoincrement())
//   text      String
//   rating    Int
//   userId    Int
//   productId Int
//   user      User    @relation(fields: [userId], references: [id])
//   product   Product @relation(fields: [productId], references: [id])

//   @@index([userId])
//   @@index([productId])
// }

// model Sale {
//   id        Int       @id @default(autoincrement())
//   startDate DateTime
//   endDate   DateTime
//   products  Product[] // Products on sale
// }

// model Order {
//   id         Int         @id @default(autoincrement())
//   orderDate  DateTime
//   total      Float
//   userId     Int
//   user       User        @relation(fields: [userId], references: [id])
//   orderItems OrderItem[]
//   shipment   Shipment[]

//   @@index([userId])
// }

// model OrderItem {
//   id        Int     @id @default(autoincrement())
//   quantity  Int
//   productId Int
//   orderId   Int
//   product   Product @relation(fields: [productId], references: [id])
//   order     Order   @relation(fields: [orderId], references: [id])

//   @@index([productId])
//   @@index([orderId])
// }

// model ShoppingCart {
//   id        Int        @id @default(autoincrement())
//   userId    Int
//   user      User       @relation(fields: [userId], references: [id])
//   cartItems CartItem[]

//   @@index([userId])
// }

// model CartItem {
//   id             Int          @id @default(autoincrement())
//   quantity       Int
//   productId      Int
//   shoppingCartId Int
//   product        Product      @relation(fields: [productId], references: [id])
//   shoppingCart   ShoppingCart @relation(fields: [shoppingCartId], references: [id])

//   @@index([shoppingCartId])
//   @@index([productId])
// }

// model Payment {
//   id            Int      @id @default(autoincrement())
//   paymentMethod String
//   amount        Float
//   paymentDate   DateTime
//   userId        Int
//   user          User     @relation(fields: [userId], references: [id])

//   @@index([userId])
// }

// model ShippingAddress {
//   id         Int        @id @default(autoincrement())
//   address    String
//   city       String
//   postalCode String
//   country    String
//   userId     Int
//   user       User       @relation(fields: [userId], references: [id])
//   shipments  Shipment[]

//   @@index([userId])
// }

// model ShippingMethod {
//   id                    Int        @id @default(autoincrement())
//   name                  String
//   estimatedDeliveryTime String
//   shipments             Shipment[]
// }

// model Shipment {
//   id                    Int             @id @default(autoincrement())
//   trackingCode          String
//   shipDate              DateTime
//   estimatedDeliveryDate DateTime
//   userId                Int
//   orderId               Int
//   shippingMethodId      Int
//   shippingAddressId     Int
//   user                  User            @relation(fields: [userId], references: [id])
//   order                 Order           @relation(fields: [orderId], references: [id])
//   shippingMethod        ShippingMethod  @relation(fields: [shippingMethodId], references: [id])
//   shippingAddress       ShippingAddress @relation(fields: [shippingAddressId], references: [id])

//   @@index([shippingAddressId])
//   @@index([shippingMethodId])
//   @@index([orderId])
//   @@index([userId])
// }

// model Promotion {
//   id          Int          @id @default(autoincrement())
//   name        String
//   description String
//   startDate   DateTime
//   endDate     DateTime
//   discount    Float
//   couponCodes CouponCode[]
// }

// model CouponCode {
//   id             Int       @id @default(autoincrement())
//   code           String
//   discount       Float
//   expirationDate DateTime
//   promotionId    Int
//   promotion      Promotion @relation(fields: [promotionId], references: [id])

//   @@index([promotionId])
// }

model Wishlist {
  id       Int       @id @default(autoincrement())
  userId   Int
  user     User      @relation(fields: [userId], references: [id])
  products Product[]
  @@index([userId])

}




model Product {
  id          Int         @id @default(autoincrement())
  wishLists   Wishlist[]
}

// nhieu nhieu